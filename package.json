{
  "name": "cube",
  "version": "1.0.0",
  "description": "3D Cube visualization with TypeScript",
  "type": "module",
  "browser": "src/canvas.html",
  "scripts": {
    "prebuild": "node -e \"const fs = require('fs'); const crypto = require('crypto'); const path = require('path'); const sourceDir = path.join(__dirname, 'src'); function hashDirectory(dir) { const files = []; function processDir(directory) { fs.readdirSync(directory).forEach(item => { const fullPath = path.join(directory, item); if (fs.statSync(fullPath).isDirectory()) { processDir(fullPath); } else if (fullPath.endsWith('.ts') || fullPath.endsWith('.js')) { const content = fs.readFileSync(fullPath); files.push({ path: fullPath.replace(sourceDir, ''), content }); } }); } processDir(dir); files.sort((a, b) => a.path.localeCompare(b.path)); const hash = crypto.createHash('md5'); files.forEach(file => hash.update(file.content)); return hash.digest('hex'); } const codeHash = hashDirectory(sourceDir); fs.writeFileSync('./src/build-number.json', JSON.stringify({ buildNumber: Date.now(), codeHash }))\"",
    "build": "tsc",
    "start": "./start.sh",
    "dev": "tsc && node dist/cube.js",
    "watch": "tsc --watch --preserveWatchOutput",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "devDependencies": {
    "http-server": "^14.1.1",
    "typescript": "^5.0.0"
  }
}
